[tool.poetry]
name = "flask_pyjwt"
version = "1.0.0"
description = "Flask extension for creating, verifying, and requiring the presence of JWTs"
license = "MIT"
authors = ["Carson Mullins <septem151@protonmail.com>"]
readme = "README.rst"
homepage = "https://flask-pyjwt.readthedocs.io/"
repository = "https://github.com/Septem151/Flask_PyJWT"
keywords = ["flask", "authentication", "jwt", "security"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.8"
PyJWT = "^2.6.0"
flask = "^2.2.2"
cryptography = "^38.0.3"
python-dotenv = "^0.21.0"
pyjwt = "^2.6.0"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
pytest = "^7.2.0"
isort = "^5.10.1"
pylint = "^2.15.6"
sphinx = "^5.3.0"
mypy = "^0.991"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.pylint.design]
max-args = 6

[tool.pylint.messages_control]
# Disable missing-module-docstring
disable = "C0114"

[tool.pylint.format]
max-line-length = "88"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_unreachable = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
check_untyped_defs = true
follow_imports = "silent"
exclude = "doc/"
